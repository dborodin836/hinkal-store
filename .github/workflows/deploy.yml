name: Deploy to Dev Production

on:
  push:
    tags:
      - dev-**
jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR Backend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: marketplace-hinkal
          IMAGE_TAG: backend-dev-${{ github.sha }}
        run: |
          cd backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:backend -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f Dockerfile.prod .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Build, tag, and push image to Amazon ECR Frontend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: marketplace-hinkal
          IMAGE_TAG: frontend-dev-${{ github.sha }}
        run: |
          cd frontend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:frontend -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f Dockerfile .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
